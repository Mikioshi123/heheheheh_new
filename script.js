document.addEventListener('DOMContentLoaded', async () => {
    // --- –ù–ê–°–¢–†–û–ô–ö–ò ---
    // üî¥ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à–∏ URL –∏ –∫–ª—é—á!
    const SUPABASE_URL = 'https://wvigsckjnuogezigsnrp.supabase.co'; 
    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind2aWdzY2tqbnVvZ2V6aWdzbnJwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ4OTU3MjEsImV4cCI6MjA3MDQ3MTcyMX0.rc6flmYgpC5DMVGcK-eU_2XDj_TOxBOrR-3mIgnASNE';
    // -----------------

    const appContainer = document.getElementById('appContainer');
    appContainer.innerHTML = `<h1>–ü—Ä–æ–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É...</h1>`;
    const tg = window.Telegram.WebApp;
    tg.ready();

    const supabaseClient = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

    try {
        console.log("–í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é 'check-employee'...");
        const user = tg.initDataUnsafe?.user;
        if (!user) throw new Error("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram.");
        
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ ---
        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º 'check-employee'
        const { data, error } = await supabaseClient.functions.invoke('check-employee', {
            body: { user }
        });
        // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

        if (error) {
            // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ –æ—à–∏–±–∫—É, –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ—Ç—á–µ—Ç –∏–∑ —Ç–µ–ª–∞ –æ—à–∏–±–∫–∏
            let errorBody = {};
            try {
                errorBody = await error.context.json();
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞, –µ—Å–ª–∏ —Ç–µ–ª–æ –Ω–µ JSON
            }
            appContainer.innerHTML = `<h2 style="color: red;">–¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω. –û—à–∏–±–∫–∞: ${error.message}</h2><pre>${JSON.stringify(errorBody, null, 2)}</pre>`;
            console.error("Test failed:", error);
        } else {
            // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
             appContainer.innerHTML = `<h2 style="color: green;">–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!</h2><p>–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:</p><pre>${JSON.stringify(data, null, 2)}</pre>`;
             console.log("Server response:", data);
        }
    } catch (e) {
        appContainer.innerHTML = `<p style="color: red;">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${e.message}</p>`;
        console.error("Critical error:", e);
    }
});
    main();
});
